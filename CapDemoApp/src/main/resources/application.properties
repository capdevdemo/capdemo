# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for local the database 
#spring.datasource.url = jdbc:mysql://localhost:3306/capappdemo
# Username and Pass for Local:
#spring.datasource.username = root
#spring.datasource.password = 
#Connection url and username and password for production database
spring.datasource.url = jdbc:mysql://capappdemo.crs8dhdgemor.us-east-1.rds.amazonaws.com:3306/capappdemodb
spring.datasource.username = capdemo
spring.datasource.password =Capdemo2018

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port=8080

<<<<<<< HEAD
=======

server.port=8087
>>>>>>> 177f56507b603232b5152332ebbd0b59525e6e88
